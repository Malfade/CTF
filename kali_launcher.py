#!/usr/bin/env python3
"""
Kali Linux CTF Launcher - –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π launcher –¥–ª—è Kali Linux
"""

import sys
import subprocess
import os
from utils import *

class KaliCTFLauncher:
    """–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π launcher –¥–ª—è Kali Linux"""
    
    def __init__(self):
        self.tools = {
            '1': {
                'name': 'Network Tools (Enhanced)',
                'desc': '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ —Å nmap –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π',
                'script': 'network_tools.py',
                'examples': [
                    '--nmap-scan 192.168.1.1 --nmap-type aggressive',
                    '--os-detect 192.168.1.1',
                    '--vuln-scan 192.168.1.1'
                ]
            },
            '2': {
                'name': 'Web Exploitation',
                'desc': 'SQL injection, XSS, Directory brute-force',
                'script': 'web_exploit.py',
                'examples': [
                    '--url http://target.com --test-all',
                    '--url http://target.com/page.php?id=1 --test-sqli'
                ]
            },
            '3': {
                'name': 'Crypto Tools',
                'desc': '–í–∑–ª–æ–º —Ö–µ—à–µ–π, —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ/–¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ',
                'script': 'crypto_tools.py',
                'examples': [
                    '--crack-hash 5f4dcc3b5aa765d61d8327deb882cf99 --type md5',
                    '--caesar-bruteforce "KHOOR"'
                ]
            },
            '4': {
                'name': 'Kali Integration',
                'desc': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ Kali Linux',
                'script': 'kali_integration.py',
                'examples': [
                    '--list-tools',
                    '--nmap 192.168.1.1 --scan-type aggressive',
                    '--nikto http://target.com',
                    '--john hashes.txt --wordlist /usr/share/wordlists/rockyou.txt'
                ]
            },
            '5': {
                'name': 'OSINT Tools',
                'desc': '–†–∞–∑–≤–µ–¥–∫–∞ –∏ —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                'script': 'osint_tools.py',
                'examples': [
                    '--whois example.com',
                    '--subdomains example.com',
                    '--username john_doe'
                ]
            },
            '6': {
                'name': 'Tor Integration',
                'desc': '–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ Tor',
                'script': 'tor_integration.py',
                'examples': [
                    '--check-tor',
                    '--scan-url https://target.com',
                    '--scan-onion facebookwkhpilnemxj7asaniu7vnjjbiltxjqhye3mhbshg7kx5tfyd.onion'
                ]
            },
            '7': {
                'name': 'Payload Generator',
                'desc': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ–π–ª–æ–∞–¥–æ–≤ –¥–ª—è —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏',
                'script': 'payload_generator.py',
                'examples': [
                    '--xss --context html',
                    '--reverse-shell 10.10.10.1 4444 --shell-type bash'
                ]
            },
            '8': {
                'name': 'Steganography',
                'desc': '–°–∫—Ä—ã—Ç–∏–µ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤',
                'script': 'steganography.py',
                'examples': [
                    '--extract-text image.png',
                    '--analyze image.png'
                ]
            },
            '9': {
                'name': 'Forensics',
                'desc': '–¶–∏—Ñ—Ä–æ–≤–∞—è —Ñ–æ—Ä–µ–Ω–∑–∏–∫–∞',
                'script': 'forensics.py',
                'examples': [
                    '--file suspicious.bin --analyze',
                    '--file file.bin --strings --min-length 6'
                ]
            },
            '10': {
                'name': 'Defense Monitor',
                'desc': '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∞—Ç–∞–∫',
                'script': 'defense_monitor.py',
                'examples': [
                    '--monitor-network --duration 120',
                    '--check-processes'
                ]
            },
            '11': {
                'name': 'Wordlist Generator',
                'desc': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª–æ–≤–∞—Ä–µ–π –¥–ª—è –±—Ä—É—Ç—Ñ–æ—Ä—Å–∞',
                'script': 'wordlist_generator.py',
                'examples': [
                    '--numeric --min 4 --max 6 -o pins.txt',
                    '--common --apply-rules -o passwords.txt'
                ]
            }
        }
        
        self.kali_quick_commands = {
            '1': {
                'name': '–ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏',
                'command': 'python3 kali_integration.py --nmap 192.168.1.0/24 --scan-type basic',
                'desc': '–ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏'
            },
            '2': {
                'name': '–ü–æ–ª–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–∏',
                'command': 'python3 kali_integration.py --nmap TARGET --scan-type aggressive',
                'desc': '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å OS detection'
            },
            '3': {
                'name': '–í–µ–±-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
                'command': 'python3 kali_integration.py --nikto http://TARGET',
                'desc': '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏'
            },
            '4': {
                'name': 'SQL Injection —Ç–µ—Å—Ç',
                'command': 'python3 kali_integration.py --sqlmap http://TARGET/page.php?id=1',
                'desc': '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ SQL injection'
            },
            '5': {
                'name': '–í–∑–ª–æ–º —Ö–µ—à–µ–π',
                'command': 'python3 kali_integration.py --john hashes.txt --wordlist /usr/share/wordlists/rockyou.txt',
                'desc': '–í–∑–ª–æ–º —Ö–µ—à–µ–π —Å –ø–æ–º–æ—â—å—é John the Ripper'
            },
            '6': {
                'name': '–ê–Ω–∞–ª–∏–∑ —Å—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏–∏',
                'command': 'python3 kali_integration.py --steghide image.jpg',
                'desc': '–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
            },
            '7': {
                'name': '–§–æ—Ä–µ–Ω–∑–∏–∫–∞ —Ñ–∞–π–ª–∞',
                'command': 'python3 kali_integration.py --binwalk suspicious.bin',
                'desc': '–ê–Ω–∞–ª–∏–∑ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞'
            },
            '8': {
                'name': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª–æ–≤–∞—Ä—è',
                'command': 'python3 wordlist_generator.py --numeric --min 4 --max 6 -o pins.txt',
                'desc': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–ª–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è'
            }
        }
    
    def show_banner(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–Ω–Ω–µ—Ä Kali Linux"""
        banner = f"""
{Colors.HEADER}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                               ‚ïë
‚ïë              üêâ KALI LINUX CTF TOOLS LAUNCHER üêâ             ‚ïë
‚ïë                    Version 2.0 - Kali Edition                 ‚ïë
‚ïë                                                               ‚ïë
‚ïë  –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Kali Linux —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π             ‚ïë
‚ïë  –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏                        ‚ïë
‚ïë                                                               ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù{Colors.RESET}
"""
        print(banner)
    
    def show_main_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        print(f"\n{Colors.HEADER}{'=' * 60}{Colors.RESET}")
        print(f"{Colors.HEADER}–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ:{Colors.RESET}\n")
        
        print(f"{Colors.SUCCESS}[1-11]{Colors.RESET} CTF –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
        print(f"{Colors.SUCCESS}[Q]{Colors.RESET} –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã Kali")
        print(f"{Colors.SUCCESS}[K]{Colors.RESET} Kali –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
        print(f"{Colors.SUCCESS}[S]{Colors.RESET} –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        print(f"{Colors.WARNING}[0]{Colors.RESET} –í—ã—Ö–æ–¥\n")
        print(f"{Colors.HEADER}{'=' * 60}{Colors.RESET}")
    
    def show_tools_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        print(f"\n{Colors.HEADER}{'=' * 60}{Colors.RESET}")
        print(f"{Colors.HEADER}CTF –ò–ù–°–¢–†–£–ú–ï–ù–¢–´:{Colors.RESET}\n")
        
        for key, tool in sorted(self.tools.items()):
            print(f"{Colors.SUCCESS}[{key}]{Colors.RESET} {tool['name']}")
            print(f"    {Colors.INFO}{tool['desc']}{Colors.RESET}\n")
        
        print(f"{Colors.WARNING}[0]{Colors.RESET} –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n")
        print(f"{Colors.HEADER}{'=' * 60}{Colors.RESET}")
    
    def show_quick_commands(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã"""
        print(f"\n{Colors.HEADER}{'=' * 60}{Colors.RESET}")
        print(f"{Colors.HEADER}–ë–´–°–¢–†–´–ï –ö–û–ú–ê–ù–î–´ KALI:{Colors.RESET}\n")
        
        for key, cmd in self.kali_quick_commands.items():
            print(f"{Colors.SUCCESS}[{key}]{Colors.RESET} {cmd['name']}")
            print(f"    {Colors.INFO}{cmd['desc']}{Colors.RESET}")
            print(f"    {Colors.WARNING}–ö–æ–º–∞–Ω–¥–∞: {cmd['command']}{Colors.RESET}\n")
        
        print(f"{Colors.WARNING}[0]{Colors.RESET} –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n")
        print(f"{Colors.HEADER}{'=' * 60}{Colors.RESET}")
    
    def show_kali_tools(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ Kali –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"""
        print(f"\n{Colors.HEADER}{'=' * 60}{Colors.RESET}")
        print(f"{Colors.HEADER}KALI –ò–ù–°–¢–†–£–ú–ï–ù–¢–´:{Colors.RESET}\n")
        
        try:
            subprocess.run(['python3', 'kali_integration.py', '--list-tools'], check=True)
        except:
            print_error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ Kali –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
        
        print(f"\n{Colors.WARNING}[0]{Colors.RESET} –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n")
        print(f"{Colors.HEADER}{'=' * 60}{Colors.RESET}")
    
    def show_system_info(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
        print(f"\n{Colors.HEADER}{'=' * 60}{Colors.RESET}")
        print(f"{Colors.HEADER}–°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:{Colors.RESET}\n")
        
        try:
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
            print_info("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:")
            subprocess.run(['uname', '-a'], check=True)
            
            print_info("\n–í–µ—Ä—Å–∏—è Kali Linux:")
            subprocess.run(['cat', '/etc/os-release'], check=True)
            
            print_info("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:")
            subprocess.run(['ip', 'addr', 'show'], check=True)
            
            print_info("\n–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:")
            subprocess.run(['netstat', '-tuln'], check=True)
            
        except Exception as e:
            print_error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
        
        print(f"\n{Colors.WARNING}[0]{Colors.RESET} –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n")
        print(f"{Colors.HEADER}{'=' * 60}{Colors.RESET}")
    
    def run_tool(self, tool_key: str):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç"""
        if tool_key not in self.tools:
            print_error("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            return
        
        tool = self.tools[tool_key]
        
        clear_screen()
        print_banner(tool['name'])
        
        print(f"\n{Colors.INFO}–û–ø–∏—Å–∞–Ω–∏–µ:{Colors.RESET}")
        print(f"  {tool['desc']}\n")
        
        print(f"{Colors.INFO}–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:{Colors.RESET}")
        for i, example in enumerate(tool['examples'], 1):
            print(f"  {i}. python3 {tool['script']} {example}")
        
        print(f"\n{Colors.INFO}–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:{Colors.RESET}")
        print(f"  python3 {tool['script']} --help\n")
        
        print(f"\n{Colors.HEADER}{'=' * 60}{Colors.RESET}")
        print(f"{Colors.WARNING}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:{Colors.RESET}\n")
        print(f"{Colors.SUCCESS}[1]{Colors.RESET} –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏")
        print(f"{Colors.SUCCESS}[2]{Colors.RESET} –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É (--help)")
        print(f"{Colors.SUCCESS}[0]{Colors.RESET} –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n")
        
        choice = input(f"{Colors.INFO}–í–∞—à –≤—ã–±–æ—Ä: {Colors.RESET}").strip()
        
        if choice == '1':
            params = input(f"\n{Colors.INFO}–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {Colors.RESET}").strip()
            cmd = f"python3 {tool['script']} {params}"
            print(f"\n{Colors.INFO}–ó–∞–ø—É—Å–∫: {cmd}{Colors.RESET}\n")
            print(f"{Colors.HEADER}{'=' * 60}{Colors.RESET}\n")
            
            try:
                subprocess.run(cmd, shell=True)
            except KeyboardInterrupt:
                print_warning("\n–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            except Exception as e:
                print_error(f"–û—à–∏–±–∫–∞: {e}")
        
        elif choice == '2':
            cmd = f"python3 {tool['script']} --help"
            print(f"\n{Colors.HEADER}{'=' * 60}{Colors.RESET}\n")
            subprocess.run(cmd, shell=True)
        
        input(f"\n{Colors.WARNING}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...{Colors.RESET}")
    
    def run_quick_command(self, cmd_key: str):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –±—ã—Å—Ç—Ä—É—é –∫–æ–º–∞–Ω–¥—É"""
        if cmd_key not in self.kali_quick_commands:
            print_error("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            return
        
        cmd_info = self.kali_quick_commands[cmd_key]
        
        print(f"\n{Colors.HEADER}{'=' * 60}{Colors.RESET}")
        print(f"{Colors.HEADER}{cmd_info['name']}{Colors.RESET}\n")
        print(f"{Colors.INFO}–û–ø–∏—Å–∞–Ω–∏–µ: {cmd_info['desc']}{Colors.RESET}")
        print(f"{Colors.WARNING}–ö–æ–º–∞–Ω–¥–∞: {cmd_info['command']}{Colors.RESET}\n")
        
        # –ó–∞–º–µ–Ω—è–µ–º TARGET –Ω–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        if 'TARGET' in cmd_info['command']:
            target = input(f"{Colors.INFO}–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—å (TARGET): {Colors.RESET}").strip()
            if not target:
                print_error("–¶–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞!")
                return
            cmd = cmd_info['command'].replace('TARGET', target)
        else:
            cmd = cmd_info['command']
        
        print(f"\n{Colors.INFO}–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {cmd}{Colors.RESET}\n")
        print(f"{Colors.HEADER}{'=' * 60}{Colors.RESET}\n")
        
        try:
            subprocess.run(cmd, shell=True)
        except KeyboardInterrupt:
            print_warning("\n–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            print_error(f"–û—à–∏–±–∫–∞: {e}")
        
        input(f"\n{Colors.WARNING}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...{Colors.RESET}")
    
    def run(self):
        """–ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª"""
        while True:
            clear_screen()
            self.show_banner()
            self.show_main_menu()
            
            choice = input(f"\n{Colors.INFO}–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: {Colors.RESET}").strip().upper()
            
            if choice == '0':
                print_success("–î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ CTF! üêâ")
                sys.exit(0)
            
            elif choice in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11']:
                self.run_tool(choice)
            
            elif choice == 'Q':
                while True:
                    clear_screen()
                    self.show_quick_commands()
                    cmd_choice = input(f"\n{Colors.INFO}–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É [0-8]: {Colors.RESET}").strip()
                    
                    if cmd_choice == '0':
                        break
                    elif cmd_choice in self.kali_quick_commands:
                        self.run_quick_command(cmd_choice)
                    else:
                        print_error("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
                        time.sleep(1)
            
            elif choice == 'K':
                while True:
                    clear_screen()
                    self.show_kali_tools()
                    input(f"\n{Colors.WARNING}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...{Colors.RESET}")
                    break
            
            elif choice == 'S':
                while True:
                    clear_screen()
                    self.show_system_info()
                    input(f"\n{Colors.WARNING}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...{Colors.RESET}")
                    break
            
            else:
                print_error("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
                time.sleep(1)

def main():
    try:
        launcher = KaliCTFLauncher()
        launcher.run()
    except KeyboardInterrupt:
        print(f"\n{Colors.WARNING}–í—ã—Ö–æ–¥...{Colors.RESET}")
        sys.exit(0)
    except Exception as e:
        print_error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()

